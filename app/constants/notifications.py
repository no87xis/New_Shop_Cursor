"""
–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π - –ù–û–í–û–ï
"""
from typing import Dict, List


# –®–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π
MESSAGE_TEMPLATES: Dict[str, Dict[str, str]] = {
    "arrived_v1": {
        "name": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–±—ã—Ç–∏–∏ —Ç–æ–≤–∞—Ä–∞",
        "template": "{name}, –≤–∞—à –∑–∞–∫–∞–∑{orderId? ' ‚Ññ'+orderId : ''} –ø—Ä–∏–µ—Ö–∞–ª –∏ –≥–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ.\nüìç –ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏: {pickup_address}\nüïí –í—Ä–µ–º—è: {pickup_hours}\n–ï—Å–ª–∏ –Ω–µ—É–¥–æ–±–Ω–æ ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ, —Å–æ–≥–ª–∞—Å—É–µ–º –≤—Ä–µ–º—è.",
        "description": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É –æ —Ç–æ–º, —á—Ç–æ –∑–∞–∫–∞–∑ –ø—Ä–∏–±—ã–ª –Ω–∞ —Å–∫–ª–∞–¥ –∏ –≥–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ"
    },
    "ready_v1": {
        "name": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –≤—ã–¥–∞—á–µ",
        "template": "{name}, –≤–∞—à –∑–∞–∫–∞–∑{orderId? ' ‚Ññ'+orderId : ''} –≥–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ.\nüìç –ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏: {pickup_address}\nüïí –í—Ä–µ–º—è: {pickup_hours}",
        "description": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞ –∫ –≤—ã–¥–∞—á–µ"
    },
    "shipped_v1": {
        "name": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ",
        "template": "{name}, –≤–∞—à –∑–∞–∫–∞–∑{orderId? ' ‚Ññ'+orderId : ''} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.\nüöö –¢—Ä–µ–∫-–Ω–æ–º–µ—Ä: {tracking_number}\nüìÖ –û–∂–∏–¥–∞–µ–º–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞: {delivery_date}",
        "description": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞"
    }
}

# –°—Ç–∞—Ç—É—Å—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
NOTIFICATION_STATUSES = {
    "SENT": "sent",
    "FAILED": "fail", 
    "SKIPPED": "skipped",
    "INVALID_PHONE": "invalid_phone"
}

# –°—Ç–∞—Ç—É—Å—ã –ø—Ä–∏–±—ã—Ç–∏—è –∑–∞–∫–∞–∑–æ–≤
ARRIVAL_STATUSES = {
    "PENDING": "pending",
    "NOTIFIED": "notified", 
    "FAILED": "failed"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ WhatsApp Relay
WHATSAPP_RELAY_SETTINGS = {
    "RATE_LIMIT_PER_MINUTE": 45,
    "MIN_DELAY_MS": 900,
    "MAX_DELAY_MS": 1700,
    "MAX_RECIPIENTS_PER_BATCH": 50,
    "DEFAULT_COUNTRY": "BY"
}

# –ö–æ–¥—ã —Å—Ç—Ä–∞–Ω –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
COUNTRY_CODES = {
    "BY": "+375",
    "RU": "+7", 
    "UA": "+380"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
DEFAULT_PICKUP_ADDRESS = "–ù–∞—à —Å–∫–ª–∞–¥, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, 123"
DEFAULT_PICKUP_HOURS = "–ü–Ω-–ü—Ç: 10:00-19:00, –°–±: 10:00-16:00"
DEFAULT_COUNTRY_CODE = "BY"

# –õ–∏–º–∏—Ç—ã –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
NOTIFICATION_LIMITS = {
    "MAX_RECIPIENTS_PER_REQUEST": 50,
    "MAX_MESSAGE_LENGTH": 1000,
    "MAX_RETRY_ATTEMPTS": 3,
    "RETRY_DELAY_MS": 5000
}

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω–æ–≤
TEMPLATE_VARIABLES = {
    "name": "–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞",
    "orderId": "–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞",
    "pickup_address": "–ê–¥—Ä–µ—Å –ø—É–Ω–∫—Ç–∞ –≤—ã–¥–∞—á–∏",
    "pickup_hours": "–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã",
    "tracking_number": "–¢—Ä–µ–∫-–Ω–æ–º–µ—Ä",
    "delivery_date": "–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏"
}


def get_template_variables(template_key: str) -> List[str]:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è —à–∞–±–ª–æ–Ω–∞
    
    Args:
        template_key: –ö–ª—é—á —à–∞–±–ª–æ–Ω–∞
        
    Returns:
        –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞
    """
    template = MESSAGE_TEMPLATES.get(template_key, {})
    template_text = template.get("template", "")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ —à–∞–±–ª–æ–Ω–∞
    import re
    variables = re.findall(r'\{([^}]+)\}', template_text)
    
    # –£–±–∏—Ä–∞–µ–º —É—Å–ª–æ–≤–∏—è –∏ –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∏–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    clean_variables = []
    for var in variables:
        if '?' in var:
            var = var.split('?')[0]
        clean_variables.append(var)
    
    return list(set(clean_variables))


def validate_template_variables(template_key: str, template_vars: Dict[str, str]) -> bool:
    """
    –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞
    
    Args:
        template_key: –ö–ª—é—á —à–∞–±–ª–æ–Ω–∞
        template_vars: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω–∞
        
    Returns:
        True –µ—Å–ª–∏ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–∞–ª–∏–¥–Ω—ã
    """
    required_vars = get_template_variables(template_key)
    
    for var in required_vars:
        if var not in template_vars:
            return False
    
    return True